// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id                String @id @default(cuid())
  name              String
  email             String @unique
  password          String
  phoneNumber       String @unique
  referralCode      String @unique
  verificationCode  String
  isAdmin           Boolean @default(false)
  isPremium         Boolean @default(false)
  isEmailVerified   Boolean @default(false)
  isPhoneVerified   Boolean @default(false)
  isKYC             Boolean @default(false)
  isBanned          Boolean @default(false)
  isSubscribed      Boolean @default(false)
  cart              Cart?
  orders            Order[]
  blogPosts         BlogPost[]
}

model Product {
  id                String @id @default(cuid())
  title             String
  description       String
  images            String
  categories        String
  subCategories     String
  isPhysical        Boolean @default(false)
  listings          Listing[]
}

model Listing {
  id                String @id @default(cuid())
  carts             Cart[]
  price             Int @default(10000000)
  stock             Int @default(0)
  discount          Int @default(0)
  product           Product @relation(fields: [productId], references: [id])
  productId         String
}

model Order {
  id                String @id @default(cuid())
  isPaid            Boolean @default(false)
  isDelivered       Boolean @default(false)
  user              User @relation(fields: [userId], references: [id])
  userId            String
}

model Cart {
  id                String @id @default(cuid())
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
  items             Listing[]
  deliveryAddress   String
  isPhysical        Boolean @default(false)
  referralCode      String
  discountCode      String
  totalCost         Int
  discountCost      Int
  payableCost       Int
}

model BlogPost {
  id                String @id @default(cuid())
  slug              String
  title             String
  image             String
  description       String
  user              User @relation(fields: [userId], references: [id])
  userId            String
}

model Views {
  slug  String @id @db.VarChar(128)
  count BigInt @default(1)
}
