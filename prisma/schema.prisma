generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Client {
  id    String  @id @default(cuid())
  title String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users            User[]
  products         Product[]
  orders           Order[]
  blogPosts        BlogPost[]
  carts            Cart[]
  discounts        Discount[]
  productCategory  ProductCategory[]
  blotPostCategory BlogPostCategory[]
}

model User {
  id                String  @id @default(cuid())
  name              String?
  email             String? @unique
  phone             String? @unique
  password          String?
  referralCode      String? @unique
  MFAMethod         String?
  isMFA             Boolean @default(false)
  isAdmin           Boolean @default(false)
  isPremium         Boolean @default(false)
  isMerchant        Boolean @default(false)
  isEmailVerified   Boolean @default(false)
  isPhoneVerified   Boolean @default(false)
  isKYC             Boolean @default(false)
  isBanned          Boolean @default(false)
  isEmailSubscribed Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  googleIntegration GoogleIntegration?
  verificationCode  VerificationCode?
  cart              Cart?

  orders            Order[]
  referralsProvided Referral[] @relation("referralsProvided")
  referralsUsed     Referral[] @relation("referralsUsed")
  blogPosts         BlogPost[]
  client            Client[]
}

model VerificationCode {
  code String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String @id
}

model GoogleIntegration {
  email   String  @unique
  name    String?
  picture String?
  locale  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @id
}

model Product {
  id          String  @id @default(cuid())
  title       String
  description String?
  brand       String?
  isPhysical  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories ProductCategory[]
  images     ProductImage[]
  listings   Listing[]
  client     Client            @relation(fields: [clientId], references: [id])
  clientId   String
}

model ProductImage {
  id String @id @default(cuid())

  url         String
  description String?

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model ProductCategory {
  title       String  @id
  description String?

  product Product[]
  client  Client[]
}

model Listing {
  id       String  @id @default(cuid())
  price    Float     @default(10000000)
  stock    Int     @default(0)
  discount Int     @default(0)
  platform String?
  region   String?
  size     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carts Cart[]
  orders Order[]

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Order {
  id              String  @id @default(cuid())
  isPaid          Boolean @default(false)
  isDelivered     Boolean @default(false)
  isPhysical      Boolean @default(false)
  paymentId       String?
  deliveryAddress String?
  referralCode    String?
  discountCode    String?
  totalCost       Float
  discountCost    Float
  payableCost     Float

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  paidAt    DateTime?

  referral Referral?

  listings Listing[]

  user     User   @relation(fields: [userId], references: [id])
  userId   String
  client   Client @relation(fields: [clientId], references: [id])
  clientId String
}

model Referral {
  id String @id @default(cuid())

  order              Order  @relation(fields: [orderId], references: [id])
  orderId            String @unique
  referralProvider   User   @relation("referralsProvided", fields: [referralProviderId], references: [id])
  referralProviderId String
  referralUser       User   @relation("referralsUsed", fields: [referralUserId], references: [id])
  referralUserId     String
}

model Cart {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings Listing[]

  user     User   @relation(fields: [userId], references: [id])
  userId   String @id
  client   Client @relation(fields: [clientId], references: [id])
  clientId String
}

model BlogPost {
  id          String @id @default(cuid())
  title       String
  image       String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories BlogPostCategory[]

  client   Client @relation(fields: [clientId], references: [id])
  clientId String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}

model BlogPostCategory {
  title       String  @id
  description String?

  blogPost BlogPost[]
  client   Client[]
}

model Discount {
  code       String @id @default(cuid())
  maxUses    Int    @default(0)
  burntUses  Int    @default(0)
  maxAmount  Int    @default(0)
  percentage Int    @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime?

  client   Client @relation(fields: [clientId], references: [id])
  clientId String
}
